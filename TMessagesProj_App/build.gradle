plugins {
    id 'com.android.application'
    id 'com.google.gms.google-services'
}

configurations.all {
    exclude group: 'com.google.firebase', module: 'firebase-core'
    exclude group: 'androidx.recyclerview', module: 'recyclerview'
}

dependencies {
    implementation project(':TMessagesProj')
    //noinspection GradleDependency
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.6' // NEEDED TESTS OF THE NEW R8 VERSION
    implementation files('../TMessagesProj/libs/libgsaverification-client.aar')
}

ext.abiCodes = ['universal': 0, 'armeabi-v7a': 1, 'arm64-v8a': 5, x86: 2, x86_64: 6]

android {
    compileSdkVersion 33
    buildToolsVersion '33.0.0'
    ndkVersion '21.4.7075529'
    sourceSets.main.jniLibs.srcDirs = ['../TMessagesProj/jni/']
    defaultConfig.applicationId = APP_PACKAGE

    buildFeatures {
        prefab true
    }

    lint {
        checkReleaseBuilds false
        disable 'MissingTranslation', 'ExtraTranslation', 'BlockedPrivateApi'
    }

    packagingOptions {
        resources {
            excludes += '**'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11

        coreLibraryDesugaringEnabled true
    }

    Properties signingProperties = new Properties()
    if (project.rootProject.file('signing.properties').exists()) {
        signingProperties.load(project.rootProject.file('signing.properties').newDataInputStream())
    }

    signingConfigs {
        if (signingProperties.getProperty("storeFile") != null) {
            sign {
                storeFile file(signingProperties.getProperty("storeFile"))
                storePassword signingProperties.getProperty("storePassword")
                keyAlias signingProperties.getProperty("keyAlias")
                keyPassword signingProperties.getProperty("keyPassword")
            }
        }
    }

    buildTypes {
        debug {
            if (signingProperties.getProperty("storeFile") != null) {
                signingConfig signingConfigs.sign
            }
            jniDebuggable true
            applicationIdSuffix ".beta"
            resValue "string", "BuildAppName", "@string/AppNameBeta"
        }

        pbeta {
            minifyEnabled true
            shrinkResources true
            if (signingProperties.getProperty("storeFile") != null) {
                signingConfig signingConfigs.sign
            }
            jniDebuggable true
            proguardFiles '../TMessagesProj/proguard-rules.pro'
            ndk.debugSymbolLevel 'FULL'
        }

        release {
            minifyEnabled true
            shrinkResources true
            if (signingProperties.getProperty("storeFile") != null) {
                signingConfig signingConfigs.sign
            }
            proguardFiles '../TMessagesProj/proguard-rules.pro'
            ndk.debugSymbolLevel 'FULL'
        }

        play {
            initWith release
        }
    }

    defaultConfig.versionCode = Integer.parseInt(APP_VERSION_CODE)

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def abi = output.getFilter('ABI')
            if (abi == null) abi = 'universal'
            outputFileName = "OwlGram-${defaultConfig.versionName}-${defaultConfig.versionCode}-${abi}.apk"
            def abiVersionCode = project.ext.abiCodes.get(abi)
            output.versionCodeOverride = defaultConfig.versionCode * 10 + abiVersionCode
        }
    }

    defaultConfig {
        applicationId 'it.owlgram.android'
        minSdkVersion 21
        targetSdkVersion 33
        versionName APP_VERSION_NAME

        multiDexEnabled true
    }

    buildFeatures {
        buildConfig = true
    }

    bundle {
        language {
            enableSplit = false
        }
    }

    splits.abi {
        enable true
        universalApk true
    }

    dependenciesInfo.includeInApk false
    namespace 'org.telegram.messenger.regular'
}

task("buildRelease") {
    dependsOn("assembleRelease")
    dependsOn("bundlePlay")
}